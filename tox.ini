[tox]
envlist = {py38,py39}-{lint,typecheck,test},docs
isolated_build = True

[testenv]
passenv = TERM
deps = 
    lint: -rpackaging/requirements-lint.txt
    typecheck: -rpackaging/requirements-typecheck.txt
    test: -rpackaging/requirements-test.txt
    docs: -rpackaging/requirements-docs.txt
commands_pre = 
    python -m rpkimancer.asn1.mod
commands =
    lint: flake8 .
    typecheck: mypy --package rpkimancer --config-file {toxinidir}/tox.ini
    test: py.test {posargs} -ra -vs --strict-markers --cov {envsitepackagesdir}/rpkimancer --cov-report term-missing

[testenv:docs]
commands =
    sphinx-multiversion -E docs/ build/docs/html/

[gh-actions]
python =
    3.8: py38
    3.9: py39

[gh-actions:env]
TOX_JOB =
    lint: lint
    typecheck: typecheck
    test: test

[travis]
python =
    3.8: py38
    3.9: py39

[travis:env]
TOX_JOB =
    lint: lint
    typecheck: typecheck
    test: test

[mypy]
pretty = True
strict = True
show_error_codes = True
exclude = rpkimancer/asn1/mod/_mod\.py$

[mypy-rpkimancer.asn1.mod]
implicit_reexport = True

[mypy-rpkimancer.asn1.mod._mod]
follow_imports = silent

[mypy-argcomplete.*]
ignore_missing_imports = True

[mypy-pycrate_asn1c.*]
ignore_missing_imports = True

[mypy-pycrate_asn1rt.*]
ignore_missing_imports = True

[coverage:run]
source = rpkimancer
omit =
    */rpkimancer/asn1/mod/_mod.py
    */rpkimancer/asn1/mod/__main__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == .__main__.:
    if typing.TYPE_CHECKING:
    raise NotImplementedError
    raise io.UnsupportedOperation

[flake8]
max-line-length = 79
doctests = True
docstring-convention = pep257
radon-max-cc = 10
statistics = True
count = True
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    .tox,
    rpkimancer/asn1/mod/_mod.py
per-file-ignores =
    rpkimancer/**/__init__.py:F401
    tests/*.py:S101
