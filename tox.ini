[tox]
envlist = {py38,py39,py310}-{typecheck,test},lint,docs,safety,oids
isolated_build = True

[testenv]
passenv = HOME TERM
setenv =
    PIPENV_VERBOSITY = -1
deps = pipenv
commands_pre = 
    pipenv install --dev --deploy
    typecheck:  pipenv run asn1-compile
commands =
    safety:     pipenv check
    typecheck:  pipenv run typecheck
    test:       pipenv run test -m 'not rpki_client'
    lint:       pipenv run lint
    docs:       pipenv run docs
    oids:       pipenv run validate-oids

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
TOX_JOB =
    lint: lint
    typecheck: typecheck
    test: test
    docs: docs
    safety: safety
    oids: oids

[pytest]
markers =
    rpki_client: mark tests requiring rpki-client to be installed
addopts =
    -ra -vs --strict-markers
    --cov rpkimancer
    --cov-report term-missing
    --cov-report xml
    --cov-branch

[mypy]
pretty = True
strict = True
show_error_codes = True
exclude = rpkimancer/asn1/mod/_mod\.py$

[mypy-rpkimancer.asn1.mod]
implicit_reexport = True

[mypy-rpkimancer.asn1.mod._mod]
follow_imports = silent

[mypy-argcomplete.*]
ignore_missing_imports = True

[mypy-pycrate_asn1c.*]
ignore_missing_imports = True

[mypy-pycrate_asn1rt.*]
ignore_missing_imports = True

[coverage:run]
source = rpkimancer
omit =
    */rpkimancer/asn1/mod/_mod.py
    */rpkimancer/asn1/mod/__main__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if __name__ == .__main__.:
    if typing.TYPE_CHECKING:
    raise NotImplementedError
    raise io.UnsupportedOperation

[flake8]
max-line-length = 79
doctests = True
docstring-convention = pep257
radon-max-cc = 10
statistics = True
count = True
exclude = 
    .git,
    __pycache__,
    build,
    dist,
    .venv,
    .tox,
    rpkimancer/asn1/mod/_mod.py
per-file-ignores =
    rpkimancer/**/__init__.py:F401
    tests/*.py:S101,S404,S603
