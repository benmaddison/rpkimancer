name: "CI/CD"
on:
  - push
  - pull_request
env:
  DEFAULT_PYTHON: 3.9
jobs:
  safety:
    runs-on: ubuntu-latest
    env:
      TOX_JOB: safety
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: install ${{ env.TOX_JOB }} job runner
        run: python -m pip install -r packaging/requirements-tox.txt
      - name: run ${{ env.TOX_JOB }} job
        run: tox
  lint:
    needs: [safety]
    runs-on: ubuntu-latest
    env:
      TOX_JOB: lint
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: install ${{ env.TOX_JOB }} job runner
        run: python -m pip install -r packaging/requirements-tox.txt
      - name: run ${{ env.TOX_JOB }} job
        run: tox
  typecheck:
    needs: [safety]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - 3.8
          - 3.9
    env:
      TOX_JOB: typecheck
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install ${{ env.TOX_JOB }} job runner
        run: python -m pip install -r packaging/requirements-tox.txt
      - name: run ${{ env.TOX_JOB }} job
        run: tox
  test:
    needs: [safety]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - 3.8
          - 3.9
    env:
      TOX_JOB: test
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install ${{ env.TOX_JOB }} job runner
        run: python -m pip install -r packaging/requirements-tox.txt
      - name: run ${{ env.TOX_JOB }} job
        run: tox
      - name: upload coverage report
        uses: codecov/codecov-action@v1
        with:
          files: coverage.xml
          env_vars: OS,PYTHON
        env:
          OS: ${{ matrix.os }}
          PYTHON: ${{ matrix.python-version }}
  docs:
    if: ${{ github.event_name == 'push' }}
    needs:
      - lint
      - typecheck
      - test
    runs-on: ubuntu-latest
    env:
      TOX_JOB: docs
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: install ${{ env.TOX_JOB }} job runner
        run: python -m pip install -r packaging/requirements-tox.txt
      - name: run ${{ env.TOX_JOB }} job
        run: tox
      - name: deploy to github-pages
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: build/docs/html
          clean-exclude: /index.html
  build:
    needs: [safety]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution:
          - sdist
          - wheel
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: install build tools
        run: python -m pip install -r packaging/requirements-build.txt
      - name: build ${{ matrix.distribution }}
        run: python -m build --$DIST
        env:
          DIST: ${{ matrix.distribution }}
      - name: upload ${{ matrix.distribution }} artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.distribution }}
          path: dist/
